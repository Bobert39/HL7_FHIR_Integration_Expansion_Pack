version: '3.8'

services:
  fhir-integration-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fhir-integration-service
    ports:
      - "5000:8080"   # HTTP
      - "5001:8081"   # HTTPS
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8081;http://+:8080
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=yourpassword
      - Fhir__ServerUrl=https://hapi.fhir.org/baseR4
      - Authentication__Authority=https://your-auth-server.com
      - Authentication__Audience=fhir-integration-service
      - VendorApi__BaseUrl=https://vendor-api.example.com
      - VendorApi__ApiKey=your-api-key-here
      - Serilog__MinimumLevel__Default=Information
    volumes:
      - ./logs:/app/logs
      - ./https:/https:ro
    networks:
      - fhir-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - fhir-server
      - auth-server

  # Example FHIR server (HAPI FHIR)
  fhir-server:
    image: hapiproject/hapi:latest
    container_name: fhir-server
    ports:
      - "8090:8080"
    environment:
      - SPRING_CONFIG_LOCATION=classpath:/application.yaml,classpath:/application-h2.yaml
      - hapi.fhir.fhir_version=R4
      - hapi.fhir.subscription.websocket_enabled=true
      - hapi.fhir.allow_external_references=true
    volumes:
      - fhir-data:/data/hapi
    networks:
      - fhir-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/fhir/metadata"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Example authentication server (placeholder)
  auth-server:
    image: nginx:alpine
    container_name: auth-server
    ports:
      - "8091:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - fhir-network
    restart: unless-stopped

  # Monitoring and logging (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - fhir-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - fhir-network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  fhir-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  fhir-network:
    driver: bridge
    name: fhir-integration-network